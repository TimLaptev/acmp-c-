/*Теория игр
(Время: 1 сек. Память: 16 Мб Сложность: 28%)
Одним из интересных объектов, изучаемых в теории игр, являются так называемые антагонистические игры двух лиц. Такие игры характеризуются множеством X стратегий первого игрока, множеством Y стратегий второго игрока и функцией выигрыша K(x, y) (x из X, y из Y). Если множества стратегий X и Y конечны, то такую игру принято называть матричной, так как функцию выигрыша K в этом случае удобно задавать матрицей.

Рассмотрим матричную игру, в которой X = {1,…,n}, Y = {1,…,m}. Матрицу выигрышей обозначим символом K. Нижним значением игры назовем число maxi=1..nminj=1..m Kij . Верхним значением игры назовем число minj=1..mmaxi=1..n Kij. Отметим также, что игры, у которых нижнее и верхнее значение совпадают, называются играми с седловой точкой.

Задана матрица выигрышей K для некоторой матричной игры. Найдите ее верхнее и нижнее значение.*/
#include <iostream> 
 
#include <vector> 
#include <algorithm> 
using namespace std;
 
int main()
{
     int n,m;
     cin >> n >> m;
     int a[101][101]; a[n][m];
     vector<int>arr1;
     vector<int>arr2;
     
    
     for (int i = 0; i < n; ++i)
         for (int j = 0; j < m; ++j)
             cin >> a[i][j];
 
 
 
 
 
    for (int i = 0; i < n; ++i)
    {
        int min = a[i][0];
        for (int j = 1; j < m; ++j)
            if (a[i][j] < min)
                min = a[i][j];
 
        arr1.push_back(min);
 
    }
    cout << endl;
    for (int j = 0; j < m; ++j)
    {
        int max = a[0][j];
        for (int i = 0; i < n; ++i)
            if (a[i][j] > max)
                max = a[i][j];
 
        arr2.push_back(max);
    }
    cout << *max_element(arr1.begin(), arr1.end())<<" "<< *min_element(arr2.begin(), arr2.end());
}
